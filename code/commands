// Activate Venv
source ~/locust/bin/activate

// Deactivate Venv
  deactivate

// Run locust 
  locust -f locustfile.py 

// Prometheus Dashboard port 9090
  kubectl port-forward svc/prometheus-kube-prometheus-prometheus 9090

// Enter venv of web server
  source ./venv/bin/activate

// Run the web server 
  fastapi dev main.py

// Docker containarization
  docker build .
  docker build -t k8s-fast-api .

// Run the web server inside the container
  docker run -p 8000:80 k8s-fast-api
********** Πρωτα κανω docker buid και μετα docker run   ************

// Use minikube docker daemon (works only in that terminal, if you open new terminal run command again)
  eval $(minikube docker-env)

// HELM PROMETHEUS INSTALL
  helm repo add prometheus-community https://prometheus-community.github.io/helm-charts
  helm repo update
  helm install prometheus-operator prometheus-community/kube-prometheus-stack --namespace monitoring --create-namespace
  kubectl get pods -n monitoring
  kubectl port-forward -n monitoring svc/prometheus-operator-prometheus 9090
  kubectl port-forward -n monitoring svc/prometheus-operator-grafana 3000

// DEPLOY app
  kubectl create ns app
  kubectl delete -f deployment.yaml
  kubectl apply -f deployment.yaml
  minikube service 


// PROMQL
  # CPU Usage (rate per pod)
sum by (pod) (
  rate(container_cpu_usage_seconds_total{namespace="app", pod=~"my-app-deployment.*"}[1m])
)

# Memory Usage (bytes per pod)
sum by (pod) (
  container_memory_usage_bytes{namespace="app", pod=~"my-app-deployment.*"}
)

# Network Inbound (bytes/sec)
sum by (pod) (
  rate(container_network_receive_bytes_total{namespace="app", pod=~"my-app-deployment.*"}[1m])
)

# Network Outbound (bytes/sec)
sum by (pod) (
  rate(container_network_transmit_bytes_total{namespace="app", pod=~"my-app-deployment.*"}[1m])
)
  
// MINIKUBE START

